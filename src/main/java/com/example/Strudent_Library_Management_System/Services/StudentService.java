package com.example.Strudent_Library_Management_System.Services;

import com.example.Strudent_Library_Management_System.ENUMS.CardStatus;
import com.example.Strudent_Library_Management_System.Model.Card;
import com.example.Strudent_Library_Management_System.Model.Student;
import com.example.Strudent_Library_Management_System.Repositories.StudentRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class StudentService {

    @Autowired
    StudentRepository studentRepository;
    public String addStudent(Student student){
        // Student from the postman is already basic attribute set
        // Card should be autogenerated when create student is called

        Card card = new Card();
        card.setCardStatus(CardStatus.ACTIVATED);
        card.setStudentVariableName(student);  //foreign key attributes

        // Let go the the student
        student.setCard(card);

        // If it was a unidirectional mapping then we had to save both entities
        // but here we're using bidirectional mapping then,
        // after saving the parent entity child entity will automatically be saved

        studentRepository.save(student);

        return "Student and Card has been added successfully.";
    }

    public String findNameByEmail(String email){
        Student student = studentRepository.findByEmail(email);
        return student.getName();
    }
    public List<Student> findNameByCountry(String country){
        List<Student> listOfStudents = studentRepository.findByCountry(country);
        return listOfStudents;
    }
    public String updateMobileNo(Student newStudent){
        // First we'll try to fetch original data
        Student origionalStudent = studentRepository.findById(newStudent.getAdmissionNo()).get();
        origionalStudent.setMobileNo(newStudent.getMobileNo());
        studentRepository.save(origionalStudent);
        return "Mobile Number has been updated.";
    }
}
